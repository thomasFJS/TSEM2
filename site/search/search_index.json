{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"documentation/","text":"Documentation technique Rappel du cahier des charges Introduction Dans le cadre du 2\u00e8me travail de semestre, j'ai d\u00e9cid\u00e9 d'effectuer un projet qui me sera tr\u00e8s utile pour le travail de dipl\u00f4me. L'id\u00e9e serait de faire une application en python qui r\u00e9cup\u00e8re des donn\u00e9es d'entrainement avec l'API Polar en fonction de la carte RFID qui est d\u00e9t\u00e9ct\u00e9. But du projet Le but de ce projet est de me pr\u00e9parer au maximum pour le travail de dipl\u00f4me. C'est pour cela que j'ai d\u00e9cid\u00e9 de mettre ensemble 2 technologies que je n'ai pas encore beaucoup utilis\u00e9 et qui sont essentielles pour mon travail de dipl\u00f4me. Pour ce projet, uniquement les scripts python permettant de traiter les donn\u00e9es voulues seront effectu\u00e9s. La partie interface de l'application finale est r\u00e9alis\u00e9e dans le cadre d'un autre cours. Contraintes techniques Je dois utiliser un lecteur de carte \u00e0 puce et l'API Polar Accesslink pour r\u00e9cup\u00e9rer les donn\u00e9es d'entrainements. Analyse Technologies Python Markdown Github (versionning, task manager) Ordinateur de type PC, 2 \u00e9crans Visual Studio Code Mkdocs (Documentation) NFC Reader ACR122U Polar Accesslink API NFC Reader ACR122U Le lecteur NFC ACR122U est un appareil permettant de lire et d'\u00e9crire sur des cartes sans contact. Il est bas\u00e9 sur la technologie Mifare 13,56 MHz (RFID) et suit les standard de la norme ISO 18092. L'ACR122U est d\u00e9velopp\u00e9 et vendu par ACS ltd . Pour pouvoir utiliser ce lecteur, j'ai utilis\u00e9 la librairie pyscard qui me permet de r\u00e9cup\u00e9rer les infos des cartes \u00e0 puces que le lecteur lit RFID Qu'est-ce que la technologie RFID ?? RFID (Radio Frequency Identification), est une technologie qui permet d'enregistrer des donn\u00e9es sur un support et de les r\u00e9cup\u00e9rer \u00e0 distance. Elle est apparue dans les ann\u00e9es 1940 et \u00e9tait utilis\u00e9e uniquement par l'arm\u00e9e pour l'identification des avions de guerre qui entrait dans l'espace a\u00e9rien du Royaume-Uni. Elle s'est ensuite r\u00e9pandue dans diff\u00e9rents secteurs industriels \u00e0 partir des ann\u00e9es 1980. Comment fonctionne la RFID ? Les \u00e9tiquettes RFID, sont compos\u00e9es d'une puce RFID et d'une antenne et sont coll\u00e9es sur un produit. Elles enregistrent les donn\u00e9es et avec un lecteur \u00e9lectromagn\u00e9tique on peut ensuite lire les ondes radio pr\u00e9sentes sur la puces RFID gr\u00e2ce \u00e0 l'antenne. Pourquoi utiliser RFID RFID est un syst\u00e8me de tra\u00e7abilit\u00e9. A l'aide d'une seule puce, il est possible de tracer les produits pendant tout le processus de production, de transport et de distribution, voire m\u00eame jusqu'\u00e0 leur fin de vie. Dans le cadre de mon projet, RFID est une solution ad\u00e9quat pour g\u00e9rer les entr\u00e9es/sorties des clients dans la salle d'entrainement. Diff\u00e9rences entre RFID et NFC Dans le cadre de mon projet, j'utilise parfois le terme NFC. La technologie NFC (Near Field Communication) est un d\u00e9riv\u00e9 de la RFID qui a commenc\u00e9 \u00e0 \u00eatre utilis\u00e9 d\u00e8s 2011. Le NFC repose sur le m\u00eame concept que la RFID. C'est une technologie qui fonctionne avec une puce permettant d'\u00e9changer des donn\u00e9es entre un lecteur et n'importe quel terminal avec un simple rapprochement ou contact entre les deux objets. La communication sans fil ne fonctionne qu'\u00e0 courte port\u00e9e et haute fr\u00e9quence, une distance d'environ 10cm. La technologie NFC se retrouve dans la plupart des smartphones, consoles de jeux ou cartes bancaires. Le lecteur de carte que j'utilise fonctionne \u00e0 l'aide de cette technologie \u00e9galement. Les principales diff\u00e9rence entre RFID et NFC r\u00e9sident dans la port\u00e9e plus courte et s\u00e9curis\u00e9e pour NFC (10cm) contre jusqu'\u00e0 10m pour RFID. La technologie NFC peut transmettre toute sorte de donn\u00e9es contre RFID qui ne transmet que l'ID. La lecture fait, quand \u00e0 elle, d\u00e9faut \u00e0 la technologie NFC qui ne peut lire qu'une puce \u00e0 la fois ce qui peut limiter ses cas d'utilisation. Pyscard - Librairie Python Smart card Pyscard est un module python qui permet d'utiliser les carte \u00e0 puce (PC/SC) avec python. Il donne acc\u00e8s \u00e0 plusieurs classes et fonctions donnant acc\u00e8s aux cartes et aux lecteurs. Architecture pyscard : smartcard.scard est un module d'extension enveloppant l'API WinSCard (Les composants de base smartcard) aussi connue sous le nom PC/SC (Personal computer / Smart Card) smartcard est un framework Python construit \u00e0 partir de l'API PC/SC Installation Pour installer la librairie pyscard sur Windows 10, il faut au pr\u00e9alable installer SWIG et l'ajouter directement au PATH. Il faut ensuite installer Visual C++ version 14.0 ou plus r\u00e9cente (directement installable depuis le Visual Studio Installer). SWIG SWIG est un outil logiciel open source qui permet de connecter des logiciels ou librairies \u00e9crites en C/C++ avec des langages de scripts tels que : Perl , Python , Ruby , PHP ou d'autres langages de programmation comme Java ou C# . Polar Accesslink API Accesslink est une API qui donne acc\u00e8s aux donn\u00e9es d'entrainement et d'activit\u00e9e journali\u00e8re enregistr\u00e9s par les appareils Polar. Pour pouvoir l'utiliser il est n\u00e9cessaire de poss\u00e9der un compte Polar Flow afin de cr\u00e9er un client sur admin.polaraccesslink.com qui nous donnera acc\u00e8s \u00e0 l'API. Accesslink utilise OAuth2 comme protocole d'authentification. Les utilisateurs enregistr\u00e9s ont besoin de s'authentifier pour pouvoir avoir acc\u00e8s aux donn\u00e9es. Fonctionnalit\u00e9s de base d'Accesslink : Fonctionnalit\u00e9 Description Utilisateurs Permets d'enregistrer, supprimer et r\u00e9cup\u00e9rer les informations de base de l'utilisateur Pull Notification Permets de v\u00e9rifier si l'utilisateur \u00e0 des donn\u00e9es disponible \u00e0 r\u00e9cup\u00e9rer Donn\u00e9e d'entrainement Permets d'acc\u00e9der aux donn\u00e9es d'entrainements de l'utilisateur Activit\u00e9 journali\u00e8re Permets d'acc\u00e9der aux donn\u00e9es de l'activit\u00e9 journali\u00e8re de l'utilisateur Info physique Permets d'acc\u00e9der aux informations physique de l'utilisateur (Ex: Taille/Poids) Mod\u00e8le de donn\u00e9es D\u00e9crit tous les objets qui transportent les donn\u00e9es entre le serveur et le client Annexes Contients des exemples et des d\u00e9tails sur l'interface de l'application Environnement de d\u00e9veloppement Pour l'environnement de d\u00e9veloppement, j'ai utilis\u00e9 Visual Studio Code. Mod\u00e8le de donn\u00e9es Analyse fonctionnelle Interface La partie r\u00e9alis\u00e9e lors du travail de semestre ne poss\u00e8de pas d'interface. Le programme r\u00e9cup\u00e8re et sauve certaines donn\u00e9es mais n'affiche rien. La partie \"Affichage\" de mon projet \u00e0 \u00e9t\u00e9 r\u00e9alis\u00e9 dans le projet du cours PDA. Fonctionnalit\u00e9s Inscription Lors de l'inscription d'un nouveau client, il remplit un formulaire, puis une fois le formulaire remplit le coach doit scanner une carte RFID. Le lecteur va lire la carte et l'ID de la carte sera attribu\u00e9 au compte client du nouveau inscrit. Authentification L'application permet de s'authentifier \u00e0 l'aide du lecteur et d'une carte RFID. L'ID de la carte est enregistr\u00e9 dans la base de donn\u00e9es. Si l'authentification est r\u00e9ussite, l'utilisateur peut utiliser une montre Polar pour son entrainement. A la fin de l'entrainement, le client scanne sa carte RFID avant de partir. Si la carte est reconnue, l'application va chercher les derni\u00e8res donn\u00e9es d'entrainement disponible \u00e0 l'aide de l'API Polar AccessLink. Enregistrement Lorsque des donn\u00e9es d'entrainement sont r\u00e9cup\u00e9r\u00e9s suite \u00e0 la s\u00e9ance d'un client, elles sont automatiquement enregistr\u00e9s dans la base de donn\u00e9es et reli\u00e9 directement au client concern\u00e9. Cas d'utilisation A l'arriv\u00e9e d'un nouveau client, il doit s'inscrire via un formulaire. Une fois le formulaire renseign\u00e9, le coach doit scanner une nouvelle carte RFID \u00e0 l'aide du lecteur. La carte sera enregistrer avec le compte du nouveau client en base de donn\u00e9es. Lorsqu'un client vient s'entrainer il doit s'authentifier \u00e0 l'entr\u00e9e \u00e0 l'aide de sa \"carte de membre\" (la carte RFID remise lors de l'inscription). Une fois entr\u00e9, le client peut se munir d'une des montres Polar mient \u00e0 disposition pour son entrainement. A la fin de son entrainement, juste avant de partir, le client badge \u00e0 la sortie avec sa carte. Si la carte est reconnue, les derni\u00e8res donn\u00e9es d'entrainements sont r\u00e9cup\u00e9r\u00e9s \u00e0 l'aide de l'API Polar. Toutes les donn\u00e9es voulues sont enregistr\u00e9s dans la base de donn\u00e9es et sont reli\u00e9s directement au client concern\u00e9. Analyse organique Architecture Arborescence de fichier +-- docs | +-- documentation.md | +-- logbook.md +-- mkdocs.yml documentation.md Fichier Markdown contenant la documentation technique du projet. logbook.md Fichier Markdown contenant le r\u00e9sum\u00e9 journalier du travail effectu\u00e9. authorization.py Script python qui permet d'authentifier un compte Polar pour avoir acc\u00e8s \u00e0 l'API Token g\u00e9n\u00e9r\u00e9 avec l'id de l'utilisateur, on essaye ensuite de l'enregistrer avec l'API accesslink pour avoir acc\u00e8s aux donn\u00e9es read.py Script python qui permet de lire les donn\u00e9es sur une carte RFID Conclusion Am\u00e9liorations possibles Dans le cadre du travail de semestre, j'ai totalement dissoci\u00e9 la partie donn\u00e9es avec l'utilisation de l'API Polar et du lecteur RFID de l'interface graphique. L'interface graphique permet de relier tous les diff\u00e9rents scripts que j'ai fait pour en faire un application fonctionnelle. La partie interface \u00e0 \u00e9t\u00e9 faite dans le cadre du cours PDA, il faudrait donc mettre ces 2 parties ensembles. Une autre am\u00e9lioration \u00e0 explorer serait d'ouvrir l'application \u00e0 tous les types de montres connect\u00e9s. Pour le moment uniquement les montres Polar sont accept\u00e9es (a cause de l'utilisation de l'API Polar). Il faudrait \u00e9galement regarder pour avoir la possibilit\u00e9 d'utiliser la montre du client et pas une montre mise \u00e0 disposition par le coach comme c'est le cas pour l'instant. Bilan personnel Ce projet \u00e0 \u00e9t\u00e9 tr\u00e8s b\u00e9n\u00e9fique pour moi, je n'avais encore jamais utilis\u00e9 l'API Polar ou encore un lecteur NFC. J'ai rencontr\u00e9 pas mal de probl\u00e8me et \u00e7a m'a permis de pr\u00e9parer pas mal de point pour mon travail de dipl\u00f4me. J'ai trouv\u00e9 tr\u00e8s int\u00e9ressant de travailler sur ces points car ils sont essentiels pour mon travail de dipl\u00f4me et j'esp\u00e8re vraiment pouvoir avoir quelque chose de fonctionnel \u00e0 la fin.","title":"Documentation technique"},{"location":"documentation/#documentation-technique","text":"","title":"Documentation technique"},{"location":"documentation/#rappel-du-cahier-des-charges","text":"","title":"Rappel du cahier des charges"},{"location":"documentation/#introduction","text":"Dans le cadre du 2\u00e8me travail de semestre, j'ai d\u00e9cid\u00e9 d'effectuer un projet qui me sera tr\u00e8s utile pour le travail de dipl\u00f4me. L'id\u00e9e serait de faire une application en python qui r\u00e9cup\u00e8re des donn\u00e9es d'entrainement avec l'API Polar en fonction de la carte RFID qui est d\u00e9t\u00e9ct\u00e9.","title":"Introduction"},{"location":"documentation/#but-du-projet","text":"Le but de ce projet est de me pr\u00e9parer au maximum pour le travail de dipl\u00f4me. C'est pour cela que j'ai d\u00e9cid\u00e9 de mettre ensemble 2 technologies que je n'ai pas encore beaucoup utilis\u00e9 et qui sont essentielles pour mon travail de dipl\u00f4me. Pour ce projet, uniquement les scripts python permettant de traiter les donn\u00e9es voulues seront effectu\u00e9s. La partie interface de l'application finale est r\u00e9alis\u00e9e dans le cadre d'un autre cours.","title":"But du projet"},{"location":"documentation/#contraintes-techniques","text":"Je dois utiliser un lecteur de carte \u00e0 puce et l'API Polar Accesslink pour r\u00e9cup\u00e9rer les donn\u00e9es d'entrainements.","title":"Contraintes techniques"},{"location":"documentation/#analyse","text":"","title":"Analyse"},{"location":"documentation/#technologies","text":"Python Markdown Github (versionning, task manager) Ordinateur de type PC, 2 \u00e9crans Visual Studio Code Mkdocs (Documentation) NFC Reader ACR122U Polar Accesslink API","title":"Technologies"},{"location":"documentation/#nfc-reader-acr122u","text":"Le lecteur NFC ACR122U est un appareil permettant de lire et d'\u00e9crire sur des cartes sans contact. Il est bas\u00e9 sur la technologie Mifare 13,56 MHz (RFID) et suit les standard de la norme ISO 18092. L'ACR122U est d\u00e9velopp\u00e9 et vendu par ACS ltd . Pour pouvoir utiliser ce lecteur, j'ai utilis\u00e9 la librairie pyscard qui me permet de r\u00e9cup\u00e9rer les infos des cartes \u00e0 puces que le lecteur lit","title":"NFC Reader ACR122U"},{"location":"documentation/#rfid","text":"Qu'est-ce que la technologie RFID ?? RFID (Radio Frequency Identification), est une technologie qui permet d'enregistrer des donn\u00e9es sur un support et de les r\u00e9cup\u00e9rer \u00e0 distance. Elle est apparue dans les ann\u00e9es 1940 et \u00e9tait utilis\u00e9e uniquement par l'arm\u00e9e pour l'identification des avions de guerre qui entrait dans l'espace a\u00e9rien du Royaume-Uni. Elle s'est ensuite r\u00e9pandue dans diff\u00e9rents secteurs industriels \u00e0 partir des ann\u00e9es 1980. Comment fonctionne la RFID ? Les \u00e9tiquettes RFID, sont compos\u00e9es d'une puce RFID et d'une antenne et sont coll\u00e9es sur un produit. Elles enregistrent les donn\u00e9es et avec un lecteur \u00e9lectromagn\u00e9tique on peut ensuite lire les ondes radio pr\u00e9sentes sur la puces RFID gr\u00e2ce \u00e0 l'antenne. Pourquoi utiliser RFID RFID est un syst\u00e8me de tra\u00e7abilit\u00e9. A l'aide d'une seule puce, il est possible de tracer les produits pendant tout le processus de production, de transport et de distribution, voire m\u00eame jusqu'\u00e0 leur fin de vie. Dans le cadre de mon projet, RFID est une solution ad\u00e9quat pour g\u00e9rer les entr\u00e9es/sorties des clients dans la salle d'entrainement. Diff\u00e9rences entre RFID et NFC Dans le cadre de mon projet, j'utilise parfois le terme NFC. La technologie NFC (Near Field Communication) est un d\u00e9riv\u00e9 de la RFID qui a commenc\u00e9 \u00e0 \u00eatre utilis\u00e9 d\u00e8s 2011. Le NFC repose sur le m\u00eame concept que la RFID. C'est une technologie qui fonctionne avec une puce permettant d'\u00e9changer des donn\u00e9es entre un lecteur et n'importe quel terminal avec un simple rapprochement ou contact entre les deux objets. La communication sans fil ne fonctionne qu'\u00e0 courte port\u00e9e et haute fr\u00e9quence, une distance d'environ 10cm. La technologie NFC se retrouve dans la plupart des smartphones, consoles de jeux ou cartes bancaires. Le lecteur de carte que j'utilise fonctionne \u00e0 l'aide de cette technologie \u00e9galement. Les principales diff\u00e9rence entre RFID et NFC r\u00e9sident dans la port\u00e9e plus courte et s\u00e9curis\u00e9e pour NFC (10cm) contre jusqu'\u00e0 10m pour RFID. La technologie NFC peut transmettre toute sorte de donn\u00e9es contre RFID qui ne transmet que l'ID. La lecture fait, quand \u00e0 elle, d\u00e9faut \u00e0 la technologie NFC qui ne peut lire qu'une puce \u00e0 la fois ce qui peut limiter ses cas d'utilisation.","title":"RFID"},{"location":"documentation/#pyscard-librairie-python-smart-card","text":"Pyscard est un module python qui permet d'utiliser les carte \u00e0 puce (PC/SC) avec python. Il donne acc\u00e8s \u00e0 plusieurs classes et fonctions donnant acc\u00e8s aux cartes et aux lecteurs. Architecture pyscard : smartcard.scard est un module d'extension enveloppant l'API WinSCard (Les composants de base smartcard) aussi connue sous le nom PC/SC (Personal computer / Smart Card) smartcard est un framework Python construit \u00e0 partir de l'API PC/SC","title":"Pyscard - Librairie Python Smart card"},{"location":"documentation/#installation","text":"Pour installer la librairie pyscard sur Windows 10, il faut au pr\u00e9alable installer SWIG et l'ajouter directement au PATH. Il faut ensuite installer Visual C++ version 14.0 ou plus r\u00e9cente (directement installable depuis le Visual Studio Installer).","title":"Installation"},{"location":"documentation/#swig","text":"SWIG est un outil logiciel open source qui permet de connecter des logiciels ou librairies \u00e9crites en C/C++ avec des langages de scripts tels que : Perl , Python , Ruby , PHP ou d'autres langages de programmation comme Java ou C# .","title":"SWIG"},{"location":"documentation/#polar-accesslink-api","text":"Accesslink est une API qui donne acc\u00e8s aux donn\u00e9es d'entrainement et d'activit\u00e9e journali\u00e8re enregistr\u00e9s par les appareils Polar. Pour pouvoir l'utiliser il est n\u00e9cessaire de poss\u00e9der un compte Polar Flow afin de cr\u00e9er un client sur admin.polaraccesslink.com qui nous donnera acc\u00e8s \u00e0 l'API. Accesslink utilise OAuth2 comme protocole d'authentification. Les utilisateurs enregistr\u00e9s ont besoin de s'authentifier pour pouvoir avoir acc\u00e8s aux donn\u00e9es. Fonctionnalit\u00e9s de base d'Accesslink : Fonctionnalit\u00e9 Description Utilisateurs Permets d'enregistrer, supprimer et r\u00e9cup\u00e9rer les informations de base de l'utilisateur Pull Notification Permets de v\u00e9rifier si l'utilisateur \u00e0 des donn\u00e9es disponible \u00e0 r\u00e9cup\u00e9rer Donn\u00e9e d'entrainement Permets d'acc\u00e9der aux donn\u00e9es d'entrainements de l'utilisateur Activit\u00e9 journali\u00e8re Permets d'acc\u00e9der aux donn\u00e9es de l'activit\u00e9 journali\u00e8re de l'utilisateur Info physique Permets d'acc\u00e9der aux informations physique de l'utilisateur (Ex: Taille/Poids) Mod\u00e8le de donn\u00e9es D\u00e9crit tous les objets qui transportent les donn\u00e9es entre le serveur et le client Annexes Contients des exemples et des d\u00e9tails sur l'interface de l'application","title":"Polar Accesslink API"},{"location":"documentation/#environnement-de-developpement","text":"Pour l'environnement de d\u00e9veloppement, j'ai utilis\u00e9 Visual Studio Code.","title":"Environnement de d\u00e9veloppement"},{"location":"documentation/#modele-de-donnees","text":"","title":"Mod\u00e8le de donn\u00e9es"},{"location":"documentation/#analyse-fonctionnelle","text":"","title":"Analyse fonctionnelle"},{"location":"documentation/#interface","text":"La partie r\u00e9alis\u00e9e lors du travail de semestre ne poss\u00e8de pas d'interface. Le programme r\u00e9cup\u00e8re et sauve certaines donn\u00e9es mais n'affiche rien. La partie \"Affichage\" de mon projet \u00e0 \u00e9t\u00e9 r\u00e9alis\u00e9 dans le projet du cours PDA.","title":"Interface"},{"location":"documentation/#fonctionnalites","text":"","title":"Fonctionnalit\u00e9s"},{"location":"documentation/#inscription","text":"Lors de l'inscription d'un nouveau client, il remplit un formulaire, puis une fois le formulaire remplit le coach doit scanner une carte RFID. Le lecteur va lire la carte et l'ID de la carte sera attribu\u00e9 au compte client du nouveau inscrit.","title":"Inscription"},{"location":"documentation/#authentification","text":"L'application permet de s'authentifier \u00e0 l'aide du lecteur et d'une carte RFID. L'ID de la carte est enregistr\u00e9 dans la base de donn\u00e9es. Si l'authentification est r\u00e9ussite, l'utilisateur peut utiliser une montre Polar pour son entrainement. A la fin de l'entrainement, le client scanne sa carte RFID avant de partir. Si la carte est reconnue, l'application va chercher les derni\u00e8res donn\u00e9es d'entrainement disponible \u00e0 l'aide de l'API Polar AccessLink.","title":"Authentification"},{"location":"documentation/#enregistrement","text":"Lorsque des donn\u00e9es d'entrainement sont r\u00e9cup\u00e9r\u00e9s suite \u00e0 la s\u00e9ance d'un client, elles sont automatiquement enregistr\u00e9s dans la base de donn\u00e9es et reli\u00e9 directement au client concern\u00e9.","title":"Enregistrement"},{"location":"documentation/#cas-dutilisation","text":"A l'arriv\u00e9e d'un nouveau client, il doit s'inscrire via un formulaire. Une fois le formulaire renseign\u00e9, le coach doit scanner une nouvelle carte RFID \u00e0 l'aide du lecteur. La carte sera enregistrer avec le compte du nouveau client en base de donn\u00e9es. Lorsqu'un client vient s'entrainer il doit s'authentifier \u00e0 l'entr\u00e9e \u00e0 l'aide de sa \"carte de membre\" (la carte RFID remise lors de l'inscription). Une fois entr\u00e9, le client peut se munir d'une des montres Polar mient \u00e0 disposition pour son entrainement. A la fin de son entrainement, juste avant de partir, le client badge \u00e0 la sortie avec sa carte. Si la carte est reconnue, les derni\u00e8res donn\u00e9es d'entrainements sont r\u00e9cup\u00e9r\u00e9s \u00e0 l'aide de l'API Polar. Toutes les donn\u00e9es voulues sont enregistr\u00e9s dans la base de donn\u00e9es et sont reli\u00e9s directement au client concern\u00e9.","title":"Cas d'utilisation"},{"location":"documentation/#analyse-organique","text":"","title":"Analyse organique"},{"location":"documentation/#architecture","text":"","title":"Architecture"},{"location":"documentation/#arborescence-de-fichier","text":"+-- docs | +-- documentation.md | +-- logbook.md +-- mkdocs.yml","title":"Arborescence de fichier"},{"location":"documentation/#documentationmd","text":"Fichier Markdown contenant la documentation technique du projet.","title":"documentation.md"},{"location":"documentation/#logbookmd","text":"Fichier Markdown contenant le r\u00e9sum\u00e9 journalier du travail effectu\u00e9.","title":"logbook.md"},{"location":"documentation/#authorizationpy","text":"Script python qui permet d'authentifier un compte Polar pour avoir acc\u00e8s \u00e0 l'API Token g\u00e9n\u00e9r\u00e9 avec l'id de l'utilisateur, on essaye ensuite de l'enregistrer avec l'API accesslink pour avoir acc\u00e8s aux donn\u00e9es","title":"authorization.py"},{"location":"documentation/#readpy","text":"Script python qui permet de lire les donn\u00e9es sur une carte RFID","title":"read.py"},{"location":"documentation/#conclusion","text":"","title":"Conclusion"},{"location":"documentation/#ameliorations-possibles","text":"Dans le cadre du travail de semestre, j'ai totalement dissoci\u00e9 la partie donn\u00e9es avec l'utilisation de l'API Polar et du lecteur RFID de l'interface graphique. L'interface graphique permet de relier tous les diff\u00e9rents scripts que j'ai fait pour en faire un application fonctionnelle. La partie interface \u00e0 \u00e9t\u00e9 faite dans le cadre du cours PDA, il faudrait donc mettre ces 2 parties ensembles. Une autre am\u00e9lioration \u00e0 explorer serait d'ouvrir l'application \u00e0 tous les types de montres connect\u00e9s. Pour le moment uniquement les montres Polar sont accept\u00e9es (a cause de l'utilisation de l'API Polar). Il faudrait \u00e9galement regarder pour avoir la possibilit\u00e9 d'utiliser la montre du client et pas une montre mise \u00e0 disposition par le coach comme c'est le cas pour l'instant.","title":"Am\u00e9liorations possibles"},{"location":"documentation/#bilan-personnel","text":"Ce projet \u00e0 \u00e9t\u00e9 tr\u00e8s b\u00e9n\u00e9fique pour moi, je n'avais encore jamais utilis\u00e9 l'API Polar ou encore un lecteur NFC. J'ai rencontr\u00e9 pas mal de probl\u00e8me et \u00e7a m'a permis de pr\u00e9parer pas mal de point pour mon travail de dipl\u00f4me. J'ai trouv\u00e9 tr\u00e8s int\u00e9ressant de travailler sur ces points car ils sont essentiels pour mon travail de dipl\u00f4me et j'esp\u00e8re vraiment pouvoir avoir quelque chose de fonctionnel \u00e0 la fin.","title":"Bilan personnel"},{"location":"logbook/","text":"Logbook Jeudi 09 D\u00e9cembre 2021 Je d\u00e9cide de tester un exemple d'utilisation de l'API Accesslink de Polar en python, le script n'arrive pas a se lancer avec une erreur dans le loader du fichier de config yaml. Il y avait juste un probl\u00e8me avec la version de Pyyaml, certaine installation change sa version et elle n'\u00e9tait plus bonne pour le script, j'ai r\u00e9install\u00e9 pyyaml avec la version 5.4 pip install pyyaml == 5.4.1 Apr\u00e8s une discussion avec M.Aigroz sur mon sujet, nous avons parler de l'import des fichiers excel (Les programmes que les coachs pourront upload), les donn\u00e9es seront converties en json pour \u00eatre plus facilement traitable ensuite. Excel to json Jeudi 16 D\u00e9cembre 2021 L'API Polar \u00e9tant un des \u00e9l\u00e9ments les plus importants pour mon application, j'aimerai essayer de faire en sorte d'avoir une application en python capable d'afficher les infos de l'utilisateur Polar lorsque le lecteur RFID scan la carte de l'utilisateur. J'ai amen\u00e9 une montre Polar M400 de chez moi pour pouvoir avoir plusieurs montre pour tester l'API. Je vais prendre les 2 montres et enregistrer des donn\u00e9es d'entrainement pendant les vacances. L'id\u00e9e pour mon travail de dipl\u00f4me est d'avoir 1 seul compte Polar (Le compte de l'admin de la salle de sport) qui serait connect\u00e9 \u00e0 plusieurs montres dans la salle. Lorsqu'un client arrive et badge sa carte de membre (carte RFID), une montre lui est assign\u00e9 pour la session d'entrainement (elle prend fin lorsque le client badge sa sortie). Jeudi 23 D\u00e9cembre 2021 J'ai repris le projet \"CrowMagic\" auquel j'ai particip\u00e9 l'ann\u00e9e pass\u00e9e dans le cadre des ateliers d\u00e9cloisonn\u00e9s. Le projet utilisait les cartes RFID et je voulais reprendre un peu l'utilisation des cartes pour mon projet. J'ai install\u00e9 VNC Viewer pour utiliser le CrowPi directement sur mon PC. Chaque carte RFID poss\u00e8de un id, dans un json je d\u00e9finis les valeurs dont j'ai besoin qui sont associ\u00e9es \u00e0 l'id de la carte. Probl\u00e8me avec l'import de RPi.GPIO, je vais regarder l'install ou si c'est un probl\u00e8me de version. Jeudi 13 Janvier 2021 La malette CrowPi ne fonctionne plus, je pense que jeudi dernier avant les vacances quelqu'un a du debranch\u00e9 la malette. J'ai prit la deuxi\u00e8me malette et j'ai reconfigur\u00e9 VNC pour pouvoir avoir acc\u00e8s. Je cr\u00e9er un Trello pour g\u00e9rer la roadmap du projet. J'ai commenc\u00e9 \u00e0 remplir les backlogs et j'ai d\u00e9fini un niveau d'importance pour les t\u00e2ches. Bug avec vscode sur le CrowPi, vscode n'arrive pas \u00e0 se lancer comme il faut (Affichage). J'ai commenc\u00e9 \u00e0 cr\u00e9er un fichier json contenant les donn\u00e9es des cartes RFID et le programme pour lire les infos des cartes. Lorsque le probl\u00e8me avec vscode sera r\u00e9gl\u00e9 je pourrai tester le programme. L'apr\u00e8s-midi M.Garcia m'a pr\u00eat\u00e9 un lecteur NFC , je vais essayer de le tester d'ici jeudi prochain pour essayer de remplacer la malette CrowPi. Jeudi 20 Janvier 2022 Je me suis document\u00e9 sur le lecteur NFC ACR122U afin de l'utiliser avec les cartes RFID, j'ai d\u00e9couvert la librairie python pyscard qui permet d'utiliser les lecteurs NFC. A l'aide de la documentation j'ai pu faire un petit programme qui lit la carte scann\u00e9e et affiche son UID. Malheureusement, pour l'utilisation de cette libraire fonctionne sur le fait qu'une connexion doit \u00eatre \u00e9tablie avec une carte donc si aucune carte n'est plac\u00e9e \u00e0 l'avance sur le lecteur le programme crashera car il n'aura aucune carte pour cr\u00e9er la connexion. Une fonctionnalit\u00e9 permet de mettre un timeout et d'attendre qu'une carte soit scann\u00e9e mais un nombre de seconde doit \u00eatre d\u00e9fini avant que le programme ne se ferme. Sachant qu'un nombre de seconde d'attente doit \u00eatre d\u00e9fini, je ne pense pas que cette approche conviendrait pour mon projet. Je d\u00e9cide donc de repartir sur la malette CrowPi et de r\u00e9installer une version plus r\u00e9cente de raspberryOS. Jeudi 27 Janvier 2022 J'ai discuter un peu avec M.Aigroz par rapport \u00e0 mon probl\u00e8me avec le lecteur NFC et la connexion avec la carte. Je revois donc toute la documentation et je finis par trouver un moyen de faire fonctionner le lecteur. J'ai r\u00e9ussi \u00e0 avoir un fichier json contenant les ids des cartes RFID et j'utilise le lecteur pour compar\u00e9 les ids des cartes scann\u00e9es avec les ids stock\u00e9es dans le json. Il faudrait maintenant que j'arrive \u00e0 int\u00e9grer un appel \u00e0 l'API Polar lorsque je scanne la carte. Depuis les vacances, j'ai eu le temps d'ajouter des donn\u00e9es d'entrainements sur les montres Polar que j'avais \u00e0 disposition. Maintenant le probl\u00e8me avec le lecteur NFC r\u00e9gl\u00e9 je vais commencer la partie sur l'API Polar et la r\u00e9cup\u00e9ration des donn\u00e9es. Jeudi 03 F\u00e9vrier 2022 J'ai avanc\u00e9 sur la documentation, j'ai ajouter la description du lecteur, la librairie pyscard ainsi que l'API Polar. J'ai commenc\u00e9 \u00e0 regarder le fonctionnement de l'API pour essayer de r\u00e9cup\u00e9rer les donn\u00e9es d'entrainements quand la carte RFID est scann\u00e9e. Il me semble que lorsqu'on r\u00e9cup\u00e8re les donn\u00e9es d'entrainements avec l'API on r\u00e9cup\u00e8re toutes les donn\u00e9es du compte, il faut que je regarde si il est pas possible de r\u00e9cup\u00e9rer seulement les derni\u00e8res donn\u00e9es. Rappel : L'authentification pour l'API Polar n'est pas pareil que l'authentification avec les cartes RFID. Il y a 1 compte Polar (celui du coach) qui est reli\u00e9 \u00e0 plusieurs montres et l'authentification des cartes RFID (client) en est une totalement s\u00e9par\u00e9e. Jeudi 10 F\u00e9vrier 2022 Nous avons r\u00e9alis\u00e9 une pr\u00e9sentation interm\u00e9diaire pour montrer l'avancement de nos projets. Suite \u00e0 cette pr\u00e9sentation, je r\u00e9alise que jusque l\u00e0 je n'ai fait que de la recherche ou quelques essais mais je n'ai pas encore de POC concr\u00e8t. Jeudi 24 F\u00e9vrier 2022 En m'aidant de la doc Polar, je vais cr\u00e9er un objet qui me permettra de r\u00e9cup\u00e9rer les datas. J'ajouterai ensuite l'objet au programme qui me permet de v\u00e9rifier les cartes RFID pour r\u00e9cup\u00e9rer les donn\u00e9es lorsqu'on s'identifie avec la carte RFID. Je vais \u00e9galement cr\u00e9er une base de donn\u00e9es pour enregistrer quelques donn\u00e9es. Jeudi 3 Mars 2022 Malade (Covid-19) Jeudi 10 Mars 2022 Le rendu du projet est fix\u00e9 \u00e0 la semaine prochaine. J'ai fait l'update du firmware de la montre Polar.","title":"Logbook"},{"location":"logbook/#logbook","text":"","title":"Logbook"},{"location":"logbook/#jeudi-09-decembre-2021","text":"Je d\u00e9cide de tester un exemple d'utilisation de l'API Accesslink de Polar en python, le script n'arrive pas a se lancer avec une erreur dans le loader du fichier de config yaml. Il y avait juste un probl\u00e8me avec la version de Pyyaml, certaine installation change sa version et elle n'\u00e9tait plus bonne pour le script, j'ai r\u00e9install\u00e9 pyyaml avec la version 5.4 pip install pyyaml == 5.4.1 Apr\u00e8s une discussion avec M.Aigroz sur mon sujet, nous avons parler de l'import des fichiers excel (Les programmes que les coachs pourront upload), les donn\u00e9es seront converties en json pour \u00eatre plus facilement traitable ensuite. Excel to json","title":"Jeudi 09 D\u00e9cembre 2021"},{"location":"logbook/#jeudi-16-decembre-2021","text":"L'API Polar \u00e9tant un des \u00e9l\u00e9ments les plus importants pour mon application, j'aimerai essayer de faire en sorte d'avoir une application en python capable d'afficher les infos de l'utilisateur Polar lorsque le lecteur RFID scan la carte de l'utilisateur. J'ai amen\u00e9 une montre Polar M400 de chez moi pour pouvoir avoir plusieurs montre pour tester l'API. Je vais prendre les 2 montres et enregistrer des donn\u00e9es d'entrainement pendant les vacances. L'id\u00e9e pour mon travail de dipl\u00f4me est d'avoir 1 seul compte Polar (Le compte de l'admin de la salle de sport) qui serait connect\u00e9 \u00e0 plusieurs montres dans la salle. Lorsqu'un client arrive et badge sa carte de membre (carte RFID), une montre lui est assign\u00e9 pour la session d'entrainement (elle prend fin lorsque le client badge sa sortie).","title":"Jeudi 16 D\u00e9cembre 2021"},{"location":"logbook/#jeudi-23-decembre-2021","text":"J'ai repris le projet \"CrowMagic\" auquel j'ai particip\u00e9 l'ann\u00e9e pass\u00e9e dans le cadre des ateliers d\u00e9cloisonn\u00e9s. Le projet utilisait les cartes RFID et je voulais reprendre un peu l'utilisation des cartes pour mon projet. J'ai install\u00e9 VNC Viewer pour utiliser le CrowPi directement sur mon PC. Chaque carte RFID poss\u00e8de un id, dans un json je d\u00e9finis les valeurs dont j'ai besoin qui sont associ\u00e9es \u00e0 l'id de la carte. Probl\u00e8me avec l'import de RPi.GPIO, je vais regarder l'install ou si c'est un probl\u00e8me de version.","title":"Jeudi 23 D\u00e9cembre 2021"},{"location":"logbook/#jeudi-13-janvier-2021","text":"La malette CrowPi ne fonctionne plus, je pense que jeudi dernier avant les vacances quelqu'un a du debranch\u00e9 la malette. J'ai prit la deuxi\u00e8me malette et j'ai reconfigur\u00e9 VNC pour pouvoir avoir acc\u00e8s. Je cr\u00e9er un Trello pour g\u00e9rer la roadmap du projet. J'ai commenc\u00e9 \u00e0 remplir les backlogs et j'ai d\u00e9fini un niveau d'importance pour les t\u00e2ches. Bug avec vscode sur le CrowPi, vscode n'arrive pas \u00e0 se lancer comme il faut (Affichage). J'ai commenc\u00e9 \u00e0 cr\u00e9er un fichier json contenant les donn\u00e9es des cartes RFID et le programme pour lire les infos des cartes. Lorsque le probl\u00e8me avec vscode sera r\u00e9gl\u00e9 je pourrai tester le programme. L'apr\u00e8s-midi M.Garcia m'a pr\u00eat\u00e9 un lecteur NFC , je vais essayer de le tester d'ici jeudi prochain pour essayer de remplacer la malette CrowPi.","title":"Jeudi 13 Janvier 2021"},{"location":"logbook/#jeudi-20-janvier-2022","text":"Je me suis document\u00e9 sur le lecteur NFC ACR122U afin de l'utiliser avec les cartes RFID, j'ai d\u00e9couvert la librairie python pyscard qui permet d'utiliser les lecteurs NFC. A l'aide de la documentation j'ai pu faire un petit programme qui lit la carte scann\u00e9e et affiche son UID. Malheureusement, pour l'utilisation de cette libraire fonctionne sur le fait qu'une connexion doit \u00eatre \u00e9tablie avec une carte donc si aucune carte n'est plac\u00e9e \u00e0 l'avance sur le lecteur le programme crashera car il n'aura aucune carte pour cr\u00e9er la connexion. Une fonctionnalit\u00e9 permet de mettre un timeout et d'attendre qu'une carte soit scann\u00e9e mais un nombre de seconde doit \u00eatre d\u00e9fini avant que le programme ne se ferme. Sachant qu'un nombre de seconde d'attente doit \u00eatre d\u00e9fini, je ne pense pas que cette approche conviendrait pour mon projet. Je d\u00e9cide donc de repartir sur la malette CrowPi et de r\u00e9installer une version plus r\u00e9cente de raspberryOS.","title":"Jeudi 20 Janvier 2022"},{"location":"logbook/#jeudi-27-janvier-2022","text":"J'ai discuter un peu avec M.Aigroz par rapport \u00e0 mon probl\u00e8me avec le lecteur NFC et la connexion avec la carte. Je revois donc toute la documentation et je finis par trouver un moyen de faire fonctionner le lecteur. J'ai r\u00e9ussi \u00e0 avoir un fichier json contenant les ids des cartes RFID et j'utilise le lecteur pour compar\u00e9 les ids des cartes scann\u00e9es avec les ids stock\u00e9es dans le json. Il faudrait maintenant que j'arrive \u00e0 int\u00e9grer un appel \u00e0 l'API Polar lorsque je scanne la carte. Depuis les vacances, j'ai eu le temps d'ajouter des donn\u00e9es d'entrainements sur les montres Polar que j'avais \u00e0 disposition. Maintenant le probl\u00e8me avec le lecteur NFC r\u00e9gl\u00e9 je vais commencer la partie sur l'API Polar et la r\u00e9cup\u00e9ration des donn\u00e9es.","title":"Jeudi 27 Janvier 2022"},{"location":"logbook/#jeudi-03-fevrier-2022","text":"J'ai avanc\u00e9 sur la documentation, j'ai ajouter la description du lecteur, la librairie pyscard ainsi que l'API Polar. J'ai commenc\u00e9 \u00e0 regarder le fonctionnement de l'API pour essayer de r\u00e9cup\u00e9rer les donn\u00e9es d'entrainements quand la carte RFID est scann\u00e9e. Il me semble que lorsqu'on r\u00e9cup\u00e8re les donn\u00e9es d'entrainements avec l'API on r\u00e9cup\u00e8re toutes les donn\u00e9es du compte, il faut que je regarde si il est pas possible de r\u00e9cup\u00e9rer seulement les derni\u00e8res donn\u00e9es. Rappel : L'authentification pour l'API Polar n'est pas pareil que l'authentification avec les cartes RFID. Il y a 1 compte Polar (celui du coach) qui est reli\u00e9 \u00e0 plusieurs montres et l'authentification des cartes RFID (client) en est une totalement s\u00e9par\u00e9e.","title":"Jeudi 03 F\u00e9vrier 2022"},{"location":"logbook/#jeudi-10-fevrier-2022","text":"Nous avons r\u00e9alis\u00e9 une pr\u00e9sentation interm\u00e9diaire pour montrer l'avancement de nos projets. Suite \u00e0 cette pr\u00e9sentation, je r\u00e9alise que jusque l\u00e0 je n'ai fait que de la recherche ou quelques essais mais je n'ai pas encore de POC concr\u00e8t.","title":"Jeudi 10 F\u00e9vrier 2022"},{"location":"logbook/#jeudi-24-fevrier-2022","text":"En m'aidant de la doc Polar, je vais cr\u00e9er un objet qui me permettra de r\u00e9cup\u00e9rer les datas. J'ajouterai ensuite l'objet au programme qui me permet de v\u00e9rifier les cartes RFID pour r\u00e9cup\u00e9rer les donn\u00e9es lorsqu'on s'identifie avec la carte RFID. Je vais \u00e9galement cr\u00e9er une base de donn\u00e9es pour enregistrer quelques donn\u00e9es.","title":"Jeudi 24 F\u00e9vrier 2022"},{"location":"logbook/#jeudi-3-mars-2022","text":"Malade (Covid-19)","title":"Jeudi 3 Mars 2022"},{"location":"logbook/#jeudi-10-mars-2022","text":"Le rendu du projet est fix\u00e9 \u00e0 la semaine prochaine. J'ai fait l'update du firmware de la montre Polar.","title":"Jeudi 10 Mars 2022"}]}